.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "TINGE" "1" "19 December 2012" "" ""

.SH NAME
TINGe \- Tool Inferring Networks of GEnes
.SH SYNOPSIS

\fBtinge-mi\fR \fB-i \fIfile\fB\fR \fB\fIoptions\fB\fR\fI ...\fR

.SH "DESCRIPTION"
.PP
TINGe is a parallel tool for constructing gene regulatory networks
from large-scale gene expression data. It uses information theoretic
criteria and statistical testing to detect dependencies between genes,
and it can be run on large parallel machines, such as IBM Blue Gene.
TINGe is implemented in C++ and MPI, therefore it should be
executed in the MPI environment by using an adequate \fBmpiexec\fR
command.
.SH "OPTIONS"
.PP
In general, TINGe tries to maintain compatibility of options, and file
formats, with ARACNe. Please refer to [1] for the detailed description of
file formats.
.TP
\fB-i \fIfile\fB\fR
Read expression profiles from \fIfile\fR\&.
.TP
\fB-o \fIfile\fB\fR
Write output network to \fIfile\fR\&. If option is
not specified, the output file is created by changing extension of
the input file to \fI\&.adj\fR\&.
.TP
\fB-j \fIfile\fB\fR
Read relevance network from \fIfile\fR\&.
.TP
\fB-w \fIfile\fB\fR
Store relevance network in \fIfile\fR\&.
.TP
\fB-l \fIfile\fB\fR
Read list of transcription factors from \fIfile\fR\&.
.TP
\fB-a \fIestimator\fB\fR
Set the estimator that should be used to calculate mutual
information to \fIestimator\fR\&. Currently two
estimators are provided:
\fIB\fR for B-spline
estimator [2], and \fIG\fR
for Gaussian kernel estimator [3]. We highly recommend using
the B-spline estimator for its high performance and accuracy. By
default the B-spline estimator is used.
.TP
\fB-b \fIbins\fB\fR
Set the number of bins used by the B-Spline mutual information estimator
to \fIbins\fR\&.
This option is ignored if Gaussian kernel estimator is used.
By default 10 bins are used. See [2] for a more detailed explanation.
.TP
\fB-k \fIorder\fB\fR
Set the order of basis B-Spline functions used by the mutual information
estimator to \fIorder\fR\&.
This option is ignored if Gaussian kernel estimator is used.
Default is 4. See [2] for a more detailed explanation.
.TP
\fB-p \fIpval\fB\fR
Set the significance level of testing if mutual information is
statistically greater than 0 to \fIpval\fR\&.
This option is mutually exclusive with \fI-t\fR\&.
Default is 1.0, that is, no test is performed. See [4] for a more
detailed explanation.
.TP
\fB-t \fIthreshold\fB\fR
Set the threshold value for mutual information to
\fIthreshold\fR\&.
This option is mutually exclusive with \fI-p\fR\&.
.TP
\fB-e \fItolerance\fB\fR
Set the tolerance of data processing inequality to
\fItolerance\fR\&.
Default is 1.0, that is, no processing is applied.
See [1] for a more detailed explanation.
.TP
\fB-C \fImethod\fB\fR
Convert final mutual information using \fImethod\fR\&.
\fIC\fR converts mutual information
to correlation coefficient using formula by Joe [5].
Currently only this method is supported. By default no conversion
is applied.
.TP
\fB-r \fIsize\fB\fR
Set the number of generated bootstrap networks to
\fIsize\fR\&.
This option is mutually exclusive with
\fI-y\fR\&.
Default is 0, that is, no bootstrapping is applied.
.TP
\fB-y \fIsize\fB\fR
Set the number of columns used for analysis to
\fIsize\fR\&. If set,
only \fIsize\fR randomly
selected columns (with no replacement) are used. This option is
mutually exclusive with \fI-r\fR\&.
Default is 0, that is, no sampling is applied.
.TP
\fB-x \fIseed\fB\fR
Set random seed utilized in statistical tests to
\fIseed\fR\&.
By default seed is generated from the current time and process identifier.
.TP
\fB-m\fR
Turn on memory usage reports. By default reports are disabled.
On some architectures memory reports might be incorrect.
.TP
\fB-v\fR
Show progress, i.e. notify about iteration progress during the main
processing phase.
.TP
\fB-h\fR
Show summary of options.
.SH "EXAMPLE"
.PP

.nf
	mpiexec -np 32 tinge-mi -i tost.exp -p 0.001 -e 0.1
      
.fi
.PP
The above command will execute tinge-mi on 32 processors. A network
will be created based on the expression data from \fItost.exp\fR
and it will be stored in \fItost.adj\fR\&. Statistical testing
at significance level of 0.001 will be performed, and data processing
inequality will be applied with tolerance of 0.1.
.SH "REFERENCES"
.PP
[1] Margolin, A.A. et al., "Reverse engineering cellular networks",
Nature Protocols, vol. 1 no. 2, 2006.

.nf
.fi
[2] Daub, C.O. et al., "Estimating mutual information using B-spline
functions - an improved similarity measure for analysing gene
expression data", BMC Bioinformatics, vol. 5 no. 118, 2004.

.nf
.fi
[3] Moon, Y., Rajagopalan, B.,  Lall, U., "Estimation of mutual information using kernel density estimators",
Physical Review E., vol. 52 no. 3, 1995.

.nf
.fi
[4] Zola, J., Aluru, M., Sarje, A., Aluru, S., "Parallel information theory based construction
of genome wide gene regulatory networks", In IEEE Transactions on Parallel and Distributed Systems,
vol. 21, no. 12, pp. 1721-1733, 2010.

.nf
.fi
[5] Joe, H., "Relative entropy measures of multivariate dependence",
Journal of the American Statistical Association, vol. 84 no. 405, 1989.
.SH "BUGS"
.PP
Bugs? What bugs? Well, if you are \fBsure\fR that you have
found a bug you can contact Jaroslaw Zola.
.SH "AUTHOR"
.PP
Jaroslaw Zola <jaroslaw.zola@gmail.com>,
Maneesha Aluru, Dan Nettleton, Srinivas Aluru.
.SH "COPYRIGHT"
.PP
TINGe (C) 2007-2012 Jaroslaw Zola under GNU GPLv3 License.
The build system, (c) 2006-2010 Jaroslaw Zola under the MIT License.
The JAZ code, (c) 2004-2010 Jaroslaw Zola under the Boost Software License.
The MPIX code, (c) 2005-2008 Jaroslaw Zola under the Boost Software License.
